#!/bin/bash

###########################################
# Structural Variant Analysis with SVIM-asm
###########################################

# This script performs structural variant analysis using SVIM-asm.
# It maps haplotype assemblies to the VGP genome and detects structural variants.

###########################################################
# Mapping Haplotype Assemblies to VGP Genome using Minimap2
###########################################################

# Define the list of samples
samples=(AL_1 AL_2 AZ_1 AZ_2 CA_1 CA_2 MA_1 MA_2 NM_1 NM_2 NY_1 NY_2 OH_1 OH_2 WA_1 WA_2)

# Generate minimap2 mapping commands for each sample and append to a script
for a in "${samples[@]}"; do
    echo "
########
# ${a}
########
cd /n/holyscratch01/edwards_lab/bfang/Hofi/Assembly/Alignments/Haplotype_to_VGP
minimap2 -a -x asm5 -t 15 --cs \$VGP_genome \$FASTA_${a}_hap1 | samtools sort -m4G -@ 15 -O BAM -o ${a}_hap1_to_VGP.bam
minimap2 -a -x asm5 -t 15 --cs \$VGP_genome \$FASTA_${a}_hap2 | samtools sort -m4G -@ 15 -O BAM -o ${a}_hap2_to_VGP.bam
" >> Codes_minimap_Haplotype_to_VGP.sh
done

############################################
# Structural Variant Detection with SVIM-asm
############################################

# Generate SVIM-asm commands for each sample and append to a script
for a in "${samples[@]}"; do
    echo "
########
# ${a}
########
svim-asm diploid ${a}_diploid ${a}_hap1_to_VGP.bam ${a}_hap2_to_VGP.bam \$VGP_genome
" >> Codes_SVIM_ASM.sh
done

######################################
# Merge SVIM-asm Results using Jasmine
######################################

# Merge the VCF files generated by SVIM-asm using Jasmine
jasmine file_list=$VCFlist out_file=SVs_merged_SVIM.vcf genome_file=$VGP_genome \
    --ignore_strand --mutual_distance \
    --max_dist_linear=0.1 --min_dist=50 --use_end \
    --output_genotypes --normalize_type threads=15

#######################################
# Structural Variant Analysis with SyRI
#######################################

# This section performs structural variant analysis using SyRI.
# It includes scaffolding with RagTag, mapping with Minimap2, and variant calling with SyRI.

#####################################
# Scaffolding Assemblies using RagTag
#####################################

# Generate RagTag scaffolding commands for each sample and append to a script
for a in "${samples[@]}"; do
    echo "
########
# ${a}
########
ragtag.py scaffold \$VGP_genome \$FASTA_${a}_hap1 -o ${a}_hap1_ragtag -t 20
ragtag.py scaffold \$VGP_genome \$FASTA_${a}_hap2 -o ${a}_hap2_ragtag -t 20
" >> Codes_RagTag_haps.sh
done

########################################################
# Mapping RagTag Assemblies to VGP Genome using Minimap2
########################################################

# Generate minimap2 mapping commands for SyRI and append to a script
for a in "${samples[@]}"; do
    echo "
########
# ${a}
########
minimap2 -ax asm5 VGP_genome_autosomes.fa ${a}_hap1_ragtag.fa -t 34 --eqx | samtools sort -m4G -@ 34 -O BAM -o \$output_folder/${a}_hap1_syri.bam
minimap2 -ax asm5 VGP_genome_autosomes.fa ${a}_hap2_ragtag.fa -t 34 --eqx | samtools sort -m4G -@ 34 -O BAM -o \$output_folder/${a}_hap2_syri.bam
" >> Codes_minimap.sh
done

########################################
# Structural Variant Detection with SyRI
########################################

# Generate SyRI commands for each sample and append to a script
for a in "${samples[@]}"; do
    echo "
########
# ${a}
########
samtools index \$output_folder/${a}_hap1_syri.bam
samtools index \$output_folder/${a}_hap2_syri.bam

syri -c \$output_folder/${a}_hap1_syri.bam -r VGP_autosomes_for_SyRi.fa -q ${a}_hap1_autosomes_for_SyRi.fa -F B --prefix VGP_${a}_hap1_ --nc 30 --dir ..
syri -c \$output_folder/${a}_hap2_syri.bam -r VGP_autosomes_for_SyRi.fa -q ${a}_hap2_autosomes_for_SyRi.fa -F B --prefix VGP_${a}_hap2_ --nc 30 --dir ..
" >> Codes_SyRi_16IDs.sh
done

##################################
# Merge SyRI Results using Jasmine
##################################

# Merge the VCF files generated by SyRI using Jasmine
jasmine file_list=file_list_SyRi.txt out_file=SVs_merged_SyRi.vcf genome_file=$VGP_genome_autosomes \
    --ignore_strand --mutual_distance \
    --max_dist_linear=0.1 --min_dist=50 --use_end \
    --output_genotypes --normalize_type threads=10
